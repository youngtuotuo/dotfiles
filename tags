!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/tuo/github/dotfiles/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	5.9.0	//
,	vim/.vimrc	/^inoremap , ,<C-g>u$/;"	m
,	windows/_vimrc	/^inoremap , ,<C-g>u$/;"	m
.	vim/.vimrc	/^inoremap . .<C-g>u$/;"	m
.	windows/_vimrc	/^inoremap . .<C-g>u$/;"	m
<	vim/.vimrc	/^vnoremap < <gv$/;"	m
<	windows/_vimrc	/^vnoremap < <gv$/;"	m
<C-x>c	vim/.vimrc	/^nnoremap <C-x>c :term $/;"	m
<C-x>c	windows/_vimrc	/^nnoremap <C-x>c :term $/;"	m
<M-j>	vim/.vimrc	/^nnoremap <M-j> <cmd>move+1<cr>$/;"	m
<M-j>	windows/_vimrc	/^nnoremap <M-j> <cmd>move+1<cr>$/;"	m
<M-k>	vim/.vimrc	/^nnoremap <M-k> <cmd>move--1<cr>$/;"	m
<M-k>	windows/_vimrc	/^nnoremap <M-k> <cmd>move--1<cr>$/;"	m
<leader>l	vim/.vimrc	/^nnoremap <nowait><leader>l :call ToggleLocationList()<CR>$/;"	m
<leader>p	vim/.vimrc	/^nnoremap <nowait><silent> <leader>p :call ToggleQuickfix()<cr>$/;"	m
>	vim/.vimrc	/^vnoremap > >gv$/;"	m
>	windows/_vimrc	/^vnoremap > >gv$/;"	m
DiffOrig	vim/.vimrc	/^command DiffOrig vert new | set bt=nofile | r ++edit # | 0d_ | diffthis | wincmd p | diffthis$/;"	c
Dotfiles	README.md	/^Dotfiles$/;"	c
Install-Target	windows/install.ps1	/^function Install-Target($target) {$/;"	f
Installation	mac/README.md	/^Installation$/;"	s
Installation	ubuntu/README.md	/^Installation$/;"	s
Installation	windows/README.md	/^Installation$/;"	s
J	vim/.vimrc	/^nnoremap J mzJ`z$/;"	m
J	vim/.vimrc	/^vnoremap J <cmd>move >+1<cr>gv=gv$/;"	m
J	windows/_vimrc	/^nnoremap J mzJ`z$/;"	m
J	windows/_vimrc	/^vnoremap J <cmd>move >+1<cr>gv=gv$/;"	m
K	vim/.vimrc	/^vnoremap K <cmd>move <-1<cr>gv=gv$/;"	m
K	windows/_vimrc	/^vnoremap K <cmd>move <-1<cr>gv=gv$/;"	m
P	nvim/init.lua	/^P = function(v) print(vim.inspect(v)) return v end$/;"	f
Q	vim/.vimrc	/^map Q gq$/;"	m
Show-Info	windows/install.ps1	/^function Show-Info($message) {$/;"	f
Show-Note	windows/install.ps1	/^function Show-Note($message) {$/;"	f
Show-Title	windows/install.ps1	/^function Show-Title($message) {$/;"	f
Show-Usage	windows/install.ps1	/^function Show-Usage {$/;"	f
ToggleLocationList	vim/.vimrc	/^function! ToggleLocationList()$/;"	f
ToggleQuickfix	vim/.vimrc	/^function! ToggleQuickfix()$/;"	f
Tools	mac/README.md	/^Tools$/;"	s
Tools	windows/README.md	/^Tools$/;"	s
Tuo	vim/.vimrc	/^augroup Tuo$/;"	a
Tuo	windows/_vimrc	/^augroup Tuo$/;"	a
Y	vim/.vimrc	/^nnoremap Y y\$$/;"	m
Y	windows/_vimrc	/^nnoremap Y y\$$/;"	m
[l	windows/_vimrc	/^nnoremap <nowait><silent> [l :try <bar> lprev <bar> catch <bar> llast <bar> endtry<cr>$/;"	m
[p	vim/.vimrc	/^nnoremap <nowait><silent> [p :cprev<cr>$/;"	m
[p	windows/_vimrc	/^nnoremap <nowait><silent> [p :try <bar> cprev <bar> catch <bar> clast <bar> endtry<cr>$/;"	m
]l	windows/_vimrc	/^nnoremap <nowait><silent> ]l :try <bar> lnext <bar> catch <bar> lfirst <bar> endtry<cr>$/;"	m
]p	vim/.vimrc	/^nnoremap <nowait><silent> ]p :cnext<cr>$/;"	m
]p	windows/_vimrc	/^nnoremap <nowait><silent> ]p :try <bar> cnext <bar> catch <bar> cfirst <bar> endtry<cr>$/;"	m
appendWindowsPath	windows/wsl.conf	/^appendWindowsPath=false$/;"	k	section:interop
automount	windows/wsl.conf	/^[automount]$/;"	s
c_	vim/.vimrc	/^nnoremap c_ c^$/;"	m
c_	windows/_vimrc	/^nnoremap c_ c^$/;"	m
callback	nvim/init.lua	/^    callback = function() $/;"	f
callback	nvim/init.lua	/^    callback = function()$/;"	f
d_	vim/.vimrc	/^nnoremap d_ d^$/;"	m
d_	windows/_vimrc	/^nnoremap d_ d^$/;"	m
destinationFolder	nvim/install_plug.ps1	/^$destinationFolder = "$env:LOCALAPPDATA\\nvim\\pack\\plug\\start"$/;"	v
destinationFolder	vim/install_plug.ps1	/^$destinationFolder = "$HOME\\vimfiles\\pack\\plug\\start"$/;"	v
dev	windows/Microsoft.PowerShell_profile.ps1	/^function dev($name) {$/;"	f
enabled	windows/wsl.conf	/^enabled=false$/;"	k	section:automount
enabled	windows/wsl.conf	/^enabled=false$/;"	k	section:interop
info	mac/install.sh	/^function info() {$/;"	f
info	ubuntu/install.sh	/^function info() {$/;"	f
install_target	mac/install.sh	/^function install_target() {$/;"	f
install_target	ubuntu/install.sh	/^function install_target() {$/;"	f
interop	windows/wsl.conf	/^[interop]$/;"	s
jobs	nvim/install_plug.ps1	/^$jobs = foreach ($url in $repoUrls) {$/;"	v
jobs	vim/install_plug.ps1	/^$jobs = foreach ($url in $repoUrls) {$/;"	v
noVNC	mac/README.md	/^noVNC$/;"	s
noVNC	ubuntu/README.md	/^noVNC$/;"	s
note	ubuntu/install.sh	/^function note() {$/;"	f
p	vim/.vimrc	/^vnoremap p "_dP$/;"	m
p	windows/_vimrc	/^vnoremap p "_dP$/;"	m
repoUrls	nvim/install_plug.ps1	/^$repoUrls = @($/;"	v
repoUrls	vim/install_plug.ps1	/^$repoUrls = @($/;"	v
s:SetHL	vim/.vimrc	/^function! s:SetHL()$/;"	f
s:SetHL	windows/_vimrc	/^function! s:SetHL()$/;"	f
set_plugin	nvim/install_plug.sh	/^function set_plugin() {$/;"	f
set_plugin	vim/install_plug.sh	/^function set_plugin() {$/;"	f
tigerVNC	ubuntu/README.md	/^tigerVNC$/;"	s
title	mac/install.sh	/^function title() {$/;"	f
title	ubuntu/install.sh	/^function title() {$/;"	f
unknown=	mac/install.sh	/^unknown=()$/;"	f
unknown=	ubuntu/install.sh	/^unknown=()$/;"	f
usage	mac/install.sh	/^function usage() {$/;"	f
usage	ubuntu/install.sh	/^function usage() {$/;"	f
vimStartup	vim/.vimrc	/^augroup vimStartup$/;"	a
wsl_usage	windows/Microsoft.PowerShell_profile.ps1	/^function wsl_usage($name) {$/;"	f
